syntax = "proto3";

option csharp_namespace = "Aggregator.EducationaInstitutionAPI.Proto";

service EducationalInstitution{
	rpc CreateEducationalInstitution(DTOEducationalInstitutionCreateRequest) returns (EducationalInstitutionCreateResponse);
	rpc CreateEducationalInstitutionWithParent(DTOEducationalInstitutionWithParentCreateRequest) returns (EducationalInstitutionCreateResponse);
}

//Requests
message DTOEducationalInstitutionCreateRequest{
	string name=1;
	string description=2;
	string location_id=3;
	repeated string buildings=4;
}
message DTOEducationalInstitutionWithParentCreateRequest{
	string name=1;
	string description=2;
	string location_id=3;
	repeated string buildings=4;
	Uuid edu_institution_id=5;
}

//Responses
message EducationalInstitutionCreateResponse{
	ResponseObject response_object=1;
	bool operation_status=2;
	string message=3;
	HttpStatusCode status_code=4;
}

message ResponseObject{
	Uuid edu_institution_id=1;
}

enum HttpStatusCode{
		HTTP_STATUS_CODE_DEFAULT=0;
		HTTP_STATUS_CODE_CREATED=201;
		HTTP_STATUS_CODE_MULTI_STATUS=207;
		HTTP_STATUS_CODE_BAD_REQUEST=400;
		HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR=500;
		}

// A UUID, encoded in accordance with section 4.1.2 of RFC 4122.
message Uuid {
	// The high 64 bits of the UUID - MSB -> LSB: time_low (32 bits) | time_mid (16 bits) | time_hi_and_version (16 bits).
	fixed64 high64 = 1;

	// The low 64 bits of the UUID - MSB -> LSB: clock_seq_hi_and_reserved (8 bits) | clock_seq_low (8 bits) | node (48 bits).
	fixed64 low64 = 2;
}