# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
- name: BuildParameters.solution
  value: src/Services/Edu/EducationaInstitution/EducationaInstitution.sln
- name: BuildParameters.ArtifactName
  value: drop
trigger:
  branches:
    include:
    - main
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: main
jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    vmImage: windows-2019
  steps:
  - checkout: self
  - task: NuGetToolInstaller@1
    displayName: Use NuGet 5.8.1
    inputs:
      versionSpec: 5.8.1
      checkLatest: true
  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: $(BuildParameters.solution)
  - task: VSBuild@1
    displayName: Build Educational Institution API
    inputs:
      solution: $(BuildParameters.solution)
      msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Educational Institution API Unit Tests
    inputs:
      command: test
      projects: src\Services\Edu\EducationalInstitution.API.Tests\EducationalInstitution.API.Tests.csproj
      arguments: --configuration $(buildConfiguration)
      workingDirectory: src/Services/Edu/EducationalInstitution.API.Tests
  - task: VSTest@2
    displayName: VsTest - testAssemblies
    enabled: False
    inputs:
      testAssemblyVer2: >-
        **\*test*.dll

        !**\*TestAdapter.dll

        !**\obj\**

        **\bin\$(BuildConfiguration)\**\*test*.dll


        !**\bin\$(BuildConfiguration)\**\xunit.runner.visualstudio.testadapter.dll

        !**\bin\$(BuildConfiguration)\**\xunit.runner.visualstudio.dotnetcore.testadapter.dll
  - task: VSTest@2
    displayName: Test Assemblies
    enabled: False
    inputs:
      testAssemblyVer2: >-
        **\$(BuildConfiguration)\*test*.dll

        !**\obj\**
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
  - task: PublishSymbols@2
    displayName: Publish symbols path
    continueOnError: True
    enabled: False
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
      PublishSymbols: false
      SymbolServerType: TeamServices
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: $(BuildParameters.ArtifactName)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
...
